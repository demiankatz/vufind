; This is an example CSV import configuration. It contains several kinds of sections:
;
; [General]    - Global settings controlling behavior
; [Column:#]   - Where "#" is an index, starting at 0 for the first column; controls
;                how individual columns are processed
; [Field:name] - Where "name" is the name of a Solr field; controls how data added
;                to that field is processed
;
; Settings supported by each type of section are detailed in the examples below.

[General]
; This setting controls how the first row of the CSV will be processed; there are
; three options:
; - fields: the header row contains the names of index fields; use it to map data
;           (note that [Column:#] and [Field:name] sections can still be used to
;           extend behavior)
; - none:   there is no header row; treat the first row as data [default behavior]
; - skip:   ignore the header row
header = none

; Default delimiter used when writing data to Solr; it should be a character which
; does not appear in the data. You can override this on a field-by-field basis in
; [Field:name] sections below. Set to false to disallow multi-valued data by default.
defaultOutputDelimiter = "|"

;[Column:0]
; This setting specifies the Solr field that this column will be mapped to; you
; can also use a series of field[] settings to copy the value(s) to multiple
; destinations.
;field = example_str
; If the column contains multiple delimited values, you can uncomment this setting
; to split them on the specified delimiter:
;delimiter = "|"

;[Field:example_str]
; This setting specifies one or more callbacks that will be used to process each
; value before it is sent to the field. Syntax is class_name::method_name; it is
; assumed that the callback function accepts one parameter: the value to manipulate.
;callback[] = '\My\Indexing\Class::myFunction'
; If this field supports multiple values, this is the delimiter character to use
; when sending the values to Solr. It must be a character which will never appear
; within the data. Default is pipe (|). Set to false to make multiple values illegal.
;outputDelimiter = "|"
; You can use this setting to hard-code values into the field, rather than pulling
; them from the CSV file itself.
;value[] = "My sample text"
